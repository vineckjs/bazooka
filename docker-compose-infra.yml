services:
  mongo:
    image: mongo:6.0
    container_name: catalog-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: catalog-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

  cassandra:
    image: cassandra:4.0
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=jaeger-cluster
      - CASSANDRA_NUM_TOKENS=256
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    volumes:
      - ./create_keyspace.cql:/docker-entrypoint-init

  jaeger:
    image: jaegertracing/all-in-one:1.45
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "6831:6831/udp" # Jaeger agent (Thrift over UDP)
      - "6832:6832/udp" # Jaeger agent (Thrift over UDP)
      - "14268:14268" # Jaeger collector
      - "14250:14250" # gRPC
      - "14269:14269" # HTTP
      - "9411:9411" # Zipkin compatible API
    environment:
      - CASSANDRA_SERVERS=cassandra
      - CASSANDRA_KEYSPACE=jaeger_v1_test
      - SPAN_STORAGE_TYPE=cassandra
    depends_on:
      - cassandra
    entrypoint:
      ["./wait-for-it.sh", "cassandra:9042", "--", "/go/bin/all-in-one-linux"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=topsecret
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.0.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICE_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS1zZXJ2aWNlLWFjY291bnQ6bWJTWlJOV3RRT2Fub1l1TXJhdU54UQ
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  esdata:
  mongo-data:
